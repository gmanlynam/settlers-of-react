{"ast":null,"code":"import _slicedToArray from \"/Users/glynam/Development/catan/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/Users/glynam/Development/catan/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/glynam/Development/catan/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/glynam/Development/catan/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/glynam/Development/catan/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/glynam/Development/catan/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/glynam/Development/catan/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Tile(props) {\n  var produceResource = function produceResource() {\n    console.log(\"I produced resources of\" + props.type);\n  };\n\n  if (props.isSand) {\n    return React.createElement(\"button\", {\n      className: \"square sand\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    });\n  } else {\n    return React.createElement(\"button\", {\n      className: \"square \".concat(props.type),\n      onClick: produceResource,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, props.diceValue);\n  }\n}\n\nfunction SeaBorder(props) {\n  return React.createElement(\"div\", {\n    className: \"seaBorder \".concat(props.orientation),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"3:1 Sheep Port\");\n}\n\nvar Board =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Board, _React$Component);\n\n  function Board() {\n    _classCallCheck(this, Board);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Board).apply(this, arguments));\n  }\n\n  _createClass(Board, [{\n    key: \"renderSquare\",\n    value: function renderSquare() {\n      var type = getType();\n      var number = Math.ceil(Math.random() * 12);\n      return React.createElement(Tile, {\n        diceValue: number,\n        type: type,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"renderSand\",\n    value: function renderSand() {\n      return React.createElement(Tile, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, this.renderSeaBorder(\"top-left\"), this.renderSeaBorder(\"top\"), this.renderSeaBorder(\"top-right\"), this.renderSeaBorder(\"left\"), React.createElement(\"div\", {\n        className: \"hexagons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"top-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, this.renderSquare(), this.renderSquare(), this.renderSquare()), React.createElement(\"div\", {\n        className: \"top-middle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, this.renderSquare(), this.renderSquare(), this.renderSquare(), this.renderSquare()), React.createElement(\"div\", {\n        className: \"middle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, this.renderSquare(), this.renderSquare(), this.renderSand(), this.renderSquare(), this.renderSquare()), React.createElement(\"div\", {\n        className: \"bottom-middle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, this.renderSquare(6), this.renderSquare(7), this.renderSquare(8), this.renderSquare(8)), React.createElement(\"div\", {\n        className: \"bottom-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, this.renderSquare(6), this.renderSquare(7), this.renderSquare(8))), this.renderSeaBorder(\"right\"), this.renderSeaBorder(\"bottom-left\"), this.renderSeaBorder(\"bottom\"), this.renderSeaBorder(\"bottom-right\"));\n    }\n  }, {\n    key: \"renderSeaBorder\",\n    value: function renderSeaBorder(orientation) {\n      return React.createElement(SeaBorder, {\n        orientation: orientation,\n        tradingPosts: \"3:1 Sheep\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Board;\n}(React.Component);\n\nvar Game =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(Game, _React$Component2);\n\n  function Game(props) {\n    var _this;\n\n    _classCallCheck(this, Game);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Game).call(this, props));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(Game, [{\n    key: \"handleClick\",\n    value: function handleClick(i) {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"game\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"game-board\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(Board, {\n        squares: current.squares,\n        onClick: function onClick(i) {\n          return _this2.handleClick(i);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"game-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, status)));\n    }\n  }]);\n\n  return Game;\n}(React.Component); // ========================================\n\n\nReactDOM.render(React.createElement(Game, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 137\n  },\n  __self: this\n}), document.getElementById('root'));\n\nfunction getType() {\n  var types = [\"grass\", \"stone\", \"brick\", \"hay\", \"sheep\"];\n  return types[Math.floor(Math.random() * 5)];\n}\n\nfunction calculateWinner(squares) {\n  var lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (var i = 0; i < lines.length; i++) {\n    var _lines$i = _slicedToArray(lines[i], 3),\n        a = _lines$i[0],\n        b = _lines$i[1],\n        c = _lines$i[2];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n}","map":{"version":3,"sources":["/Users/glynam/Development/catan/src/index.js"],"names":["React","ReactDOM","Tile","props","produceResource","console","log","type","isSand","diceValue","SeaBorder","orientation","Board","getType","number","Math","ceil","random","renderSeaBorder","renderSquare","renderSand","Component","Game","state","i","current","squares","handleClick","status","render","document","getElementById","types","floor","calculateWinner","lines","length","a","b","c"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nfunction Tile(props) {\n    const produceResource = () => {\n        console.log(\"I produced resources of\" + props.type);\n    };\n    if (props.isSand) {\n        return (\n            <button className=\"square sand\">\n            </button>\n        );\n    } else {\n        return (\n            <button className={`square ${props.type}`}\n            onClick={produceResource}>\n                {props.diceValue}\n            </button>\n        );\n    }\n\n}\n\nfunction SeaBorder(props) {\n    return (\n        <div className={`seaBorder ${props.orientation}`}>\n            3:1 Sheep Port\n        </div>\n    )\n}\n\nclass Board extends React.Component {\n    renderSquare() {\n        let type = getType();\n        let number = Math.ceil(Math.random() * 12);\n        return (\n            <Tile\n                diceValue={number}\n                type={type}\n            />\n        );\n    }\n    renderSand() {\n        return (\n            <Tile/>\n        );\n    }\n    render() {\n        return (\n            <div>\n                {this.renderSeaBorder(\"top-left\")}\n                {this.renderSeaBorder(\"top\")}\n                {this.renderSeaBorder(\"top-right\")}\n                {this.renderSeaBorder(\"left\")}\n\n\n                <div className=\"hexagons\">\n                    <div className=\"top-row\">\n                        {this.renderSquare()}\n                        {this.renderSquare()}\n                        {this.renderSquare()}\n                    </div>\n                    <div className=\"top-middle\">\n                        {this.renderSquare()}\n                        {this.renderSquare()}\n                        {this.renderSquare()}\n                        {this.renderSquare()}\n                    </div>\n                    <div className=\"middle\">\n                        {this.renderSquare()}\n                        {this.renderSquare()}\n                        {this.renderSand()}\n                        {this.renderSquare()}\n                        {this.renderSquare()}\n                    </div>\n\n                    <div className=\"bottom-middle\">\n                        {this.renderSquare(6)}\n                        {this.renderSquare(7)}\n                        {this.renderSquare(8)}\n                        {this.renderSquare(8)}\n                    </div>\n\n                    <div className=\"bottom-row\">\n                        {this.renderSquare(6)}\n                        {this.renderSquare(7)}\n                        {this.renderSquare(8)}\n                    </div>\n                </div>\n                {this.renderSeaBorder(\"right\")}\n                {this.renderSeaBorder(\"bottom-left\")}\n                {this.renderSeaBorder(\"bottom\")}\n                {this.renderSeaBorder(\"bottom-right\")}\n            </div>\n        );\n    }\n\n    renderSeaBorder(orientation) {\n        return (\n            <SeaBorder\n                orientation={orientation}\n                tradingPosts={\"3:1 Sheep\"}\n            />\n        );\n    }\n\n}\n\nclass Game extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        };\n    }\n    handleClick(i) {\n    }\n    render() {\n        return (\n            <div className=\"game\">\n                <div className=\"game-board\">\n                    <Board\n                        squares={current.squares}\n                        onClick={(i) => this.handleClick(i)}\n                    />\n                </div>\n                <div className=\"game-info\">\n                    <div>{status}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\n// ========================================\n\nReactDOM.render(\n    <Game />,\n    document.getElementById('root')\n);\n\nfunction getType() {\n    const types = [\"grass\", \"stone\", \"brick\", \"hay\", \"sheep\"];\n    return types[Math.floor(Math.random() * 5)];\n}\n\nfunction calculateWinner(squares) {\n    const lines = [\n        [0, 1, 2],\n        [3, 4, 5],\n        [6, 7, 8],\n        [0, 3, 6],\n        [1, 4, 7],\n        [2, 5, 8],\n        [0, 4, 8],\n        [2, 4, 6],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n        const [a, b, c] = lines[i];\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n            return squares[a];\n        }\n    }\n    return null;\n}\n"]},"metadata":{},"sourceType":"module"}