{"ast":null,"code":"import _classCallCheck from \"/Users/glynam/Development/catan/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/glynam/Development/catan/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/glynam/Development/catan/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/glynam/Development/catan/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/glynam/Development/catan/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/glynam/Development/catan/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Player from './Players/player';\n\nfunction Tile(props) {\n  if (props.isSand) {\n    return React.createElement(\"button\", {\n      className: \"square sand\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    });\n  } else {\n    if (props.currentRoll === props.diceValue) {\n      props.produceResources({\n        type: props.type\n      });\n    }\n\n    return React.createElement(\"button\", {\n      className: \"square \".concat(props.type),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, props.diceValue);\n  }\n}\n\nfunction SeaBorder(props) {\n  return React.createElement(\"div\", {\n    className: \"seaBorder \".concat(props.orientation),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"3:1 Sheep Port\");\n}\n\nvar Board =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Board, _React$Component);\n\n  function Board() {\n    _classCallCheck(this, Board);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Board).apply(this, arguments));\n  }\n\n  _createClass(Board, [{\n    key: \"renderSquare\",\n    value: function renderSquare(tileNumber) {\n      return React.createElement(Tile, {\n        diceValue: this.props.tiles[tileNumber].number,\n        type: this.props.tiles[tileNumber].type,\n        currentRoll: this.props.currentRoll,\n        produceResources: this.props.produceResources,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"renderSand\",\n    value: function renderSand() {\n      return React.createElement(Tile, {\n        isSand: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, this.renderSeaBorder(\"top-left\"), this.renderSeaBorder(\"top\"), this.renderSeaBorder(\"top-right\"), this.renderSeaBorder(\"left\"), React.createElement(\"div\", {\n        className: \"hexagons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"top-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, this.renderSquare(0), this.renderSquare(1), this.renderSquare(2)), React.createElement(\"div\", {\n        className: \"top-middle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, this.renderSquare(3), this.renderSquare(4), this.renderSquare(5), this.renderSquare(6)), React.createElement(\"div\", {\n        className: \"middle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, this.renderSquare(7), this.renderSquare(8), this.renderSand(), this.renderSquare(9), this.renderSquare(10)), React.createElement(\"div\", {\n        className: \"bottom-middle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, this.renderSquare(11), this.renderSquare(12), this.renderSquare(13), this.renderSquare(14)), React.createElement(\"div\", {\n        className: \"bottom-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, this.renderSquare(15), this.renderSquare(16), this.renderSquare(17))), this.renderSeaBorder(\"right\"), this.renderSeaBorder(\"bottom-left\"), this.renderSeaBorder(\"bottom\"), this.renderSeaBorder(\"bottom-right\"));\n    }\n  }, {\n    key: \"renderSeaBorder\",\n    value: function renderSeaBorder(orientation) {\n      return React.createElement(SeaBorder, {\n        orientation: orientation,\n        tradingPosts: \"3:1 Sheep\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Board;\n}(React.Component);\n\nfunction generateTiles() {\n  var tileArr = [];\n\n  for (var i = 0; i < 18; i++) {\n    var type = getType();\n    var number = Math.ceil(Math.random() * 12);\n    tileArr.push({\n      type: type,\n      number: number\n    });\n  }\n\n  return tileArr;\n}\n\nvar Game =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(Game, _React$Component2);\n\n  function Game(props) {\n    var _this;\n\n    _classCallCheck(this, Game);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Game).call(this, props));\n\n    _this.produceResource = function (tileResources) {\n      console.log(\"I produced resources of \" + tileResources.type);\n      console.log(\"I produced resources for \" + _this.state.player.cards);\n\n      _this.setState({\n        player: {\n          cards: [tileResources.type]\n        }\n      });\n    };\n\n    _this.state = {\n      tiles: generateTiles(),\n      player: {\n        cards: []\n      }\n    };\n    return _this;\n  }\n\n  _createClass(Game, [{\n    key: \"handleClick\",\n    value: function handleClick(i) {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"game\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"game-board\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(Board, {\n        onClick: function onClick(i) {\n          return _this2.handleClick(i);\n        },\n        tiles: this.state.tiles,\n        currentRoll: this.state.currentRoll,\n        produceResources: this.produceResource,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"game-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this2.handleRoll();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, \"Roll\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"Current roll: \", this.state.currentRoll), \"Player one info\", React.createElement(Player, {\n        player: this.state.player,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"handleRoll\",\n    value: function handleRoll() {\n      var roll = Math.ceil(Math.random() * 6);\n      this.setState({\n        currentRoll: roll\n      });\n    }\n  }]);\n\n  return Game;\n}(React.Component); // ========================================\n\n\nReactDOM.render(React.createElement(Game, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 176\n  },\n  __self: this\n}), document.getElementById('root'));\n\nfunction getType() {\n  var types = [\"grass\", \"stone\", \"brick\", \"hay\", \"sheep\"];\n  return types[Math.floor(Math.random() * 5)];\n}","map":{"version":3,"sources":["/Users/glynam/Development/catan/src/index.js"],"names":["React","ReactDOM","Player","Tile","props","isSand","currentRoll","diceValue","produceResources","type","SeaBorder","orientation","Board","tileNumber","tiles","number","renderSeaBorder","renderSquare","renderSand","Component","generateTiles","tileArr","i","getType","Math","ceil","random","push","Game","produceResource","tileResources","console","log","state","player","cards","setState","handleClick","handleRoll","roll","render","document","getElementById","types","floor"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Player from './Players/player'\nfunction Tile(props) {\n    if (props.isSand) {\n        return (\n            <button className=\"square sand\">\n            </button>\n        );\n    } else {\n        if (props.currentRoll === props.diceValue) {\n            props.produceResources({type: props.type});\n        }\n        return (\n            <button className={`square ${props.type}`}>\n                {props.diceValue}\n            </button>\n        );\n    }\n\n}\n\nfunction SeaBorder(props) {\n    return (\n        <div className={`seaBorder ${props.orientation}`}>\n            3:1 Sheep Port\n        </div>\n    )\n}\n\nclass Board extends React.Component {\n    renderSquare(tileNumber) {\n        return (\n            <Tile\n                diceValue={this.props.tiles[tileNumber].number}\n                type={this.props.tiles[tileNumber].type}\n                currentRoll={this.props.currentRoll}\n                produceResources={this.props.produceResources}\n            />\n        );\n    }\n    renderSand() {\n        return (\n            <Tile isSand={true}/>\n        );\n    }\n    render() {\n        return (\n            <div>\n                {this.renderSeaBorder(\"top-left\")}\n                {this.renderSeaBorder(\"top\")}\n                {this.renderSeaBorder(\"top-right\")}\n                {this.renderSeaBorder(\"left\")}\n\n\n                <div className=\"hexagons\">\n                    <div className=\"top-row\">\n                        {this.renderSquare(0)}\n                        {this.renderSquare(1)}\n                        {this.renderSquare(2)}\n                    </div>\n                    <div className=\"top-middle\">\n                        {this.renderSquare(3)}\n                        {this.renderSquare(4)}\n                        {this.renderSquare(5)}\n                        {this.renderSquare(6)}\n                    </div>\n                    <div className=\"middle\">\n                        {this.renderSquare(7)}\n                        {this.renderSquare(8)}\n                        {this.renderSand()}\n                        {this.renderSquare(9)}\n                        {this.renderSquare(10)}\n                    </div>\n\n                    <div className=\"bottom-middle\">\n                        {this.renderSquare(11)}\n                        {this.renderSquare(12)}\n                        {this.renderSquare(13)}\n                        {this.renderSquare(14)}\n                    </div>\n\n                    <div className=\"bottom-row\">\n                        {this.renderSquare(15)}\n                        {this.renderSquare(16)}\n                        {this.renderSquare(17)}\n                    </div>\n                </div>\n                {this.renderSeaBorder(\"right\")}\n                {this.renderSeaBorder(\"bottom-left\")}\n                {this.renderSeaBorder(\"bottom\")}\n                {this.renderSeaBorder(\"bottom-right\")}\n            </div>\n        );\n    }\n\n    renderSeaBorder(orientation) {\n        return (\n            <SeaBorder\n                orientation={orientation}\n                tradingPosts={\"3:1 Sheep\"}\n            />\n        );\n    }\n\n}\n\nfunction generateTiles() {\n    let tileArr = [];\n    for (let  i=0; i < 18; i++) {\n        let type = getType();\n        let number = Math.ceil(Math.random() * 12);\n        tileArr.push({\n            type: type,\n            number: number\n        });\n    }\n    return tileArr;\n\n}\n\nclass Game extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            tiles: generateTiles(),\n            player: {\n                cards: []\n            }\n        };\n    }\n    produceResource = (tileResources) => {\n        console.log(\"I produced resources of \" + tileResources.type);\n        console.log(\"I produced resources for \" + this.state.player.cards);\n        this.setState({\n            player: {\n                cards: [tileResources.type]\n            }\n        });\n    };\n    handleClick(i) {\n    }\n    render() {\n        return (\n            <div className=\"game\">\n                <div className=\"game-board\">\n                    <Board\n                        onClick={(i) => this.handleClick(i)}\n                        tiles={this.state.tiles}\n                        currentRoll={this.state.currentRoll}\n                        produceResources={this.produceResource}\n                    />\n                </div>\n                <div className=\"game-info\">\n                    <button onClick={() => this.handleRoll()}>Roll</button>\n                    <div>Current roll: {this.state.currentRoll}</div>\n                    Player one info\n                    <Player\n                        player={this.state.player}\n                    />\n                </div>\n            </div>\n        );\n    }\n\n    handleRoll() {\n        const roll = Math.ceil(Math.random() * 6);\n        this.setState({currentRoll: roll});\n    }\n}\n\n// ========================================\n\nReactDOM.render(\n    <Game />,\n    document.getElementById('root')\n);\n\nfunction getType() {\n    const types = [\"grass\", \"stone\", \"brick\", \"hay\", \"sheep\"];\n    return types[Math.floor(Math.random() * 5)];\n}\n"]},"metadata":{},"sourceType":"module"}