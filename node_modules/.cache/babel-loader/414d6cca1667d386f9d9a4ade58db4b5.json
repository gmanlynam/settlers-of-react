{"ast":null,"code":"import _classCallCheck from \"/Users/glynam/Development/catan/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/glynam/Development/catan/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/glynam/Development/catan/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/glynam/Development/catan/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/glynam/Development/catan/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/glynam/Development/catan/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Tile(props) {\n  var produceResource = function produceResource() {\n    console.log(\"I produced resources of\" + props.type);\n  };\n\n  if (props.currentRoll === props.diceValue) {\n    produceResource();\n  }\n\n  if (props.isSand) {\n    return React.createElement(\"button\", {\n      className: \"square sand\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    });\n  } else {\n    return React.createElement(\"button\", {\n      className: \"square \".concat(props.type),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, props.diceValue);\n  }\n}\n\nfunction SeaBorder(props) {\n  return React.createElement(\"div\", {\n    className: \"seaBorder \".concat(props.orientation),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"3:1 Sheep Port\");\n}\n\nvar Board =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Board, _React$Component);\n\n  function Board() {\n    _classCallCheck(this, Board);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Board).apply(this, arguments));\n  }\n\n  _createClass(Board, [{\n    key: \"renderSquare\",\n    value: function renderSquare(tileNumber) {\n      return React.createElement(Tile, {\n        diceValue: this.props.tiles[tileNumber].number,\n        type: this.props.tiles[tileNumber].type,\n        currentRoll: this.props.currentRoll,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"renderSand\",\n    value: function renderSand() {\n      return React.createElement(Tile, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, this.renderSeaBorder(\"top-left\"), this.renderSeaBorder(\"top\"), this.renderSeaBorder(\"top-right\"), this.renderSeaBorder(\"left\"), React.createElement(\"div\", {\n        className: \"hexagons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"top-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, this.renderSquare(0), this.renderSquare(1), this.renderSquare(2)), React.createElement(\"div\", {\n        className: \"top-middle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, this.renderSquare(3), this.renderSquare(4), this.renderSquare(5), this.renderSquare(6)), React.createElement(\"div\", {\n        className: \"middle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, this.renderSquare(7), this.renderSquare(8), this.renderSand(), this.renderSquare(9), this.renderSquare(10)), React.createElement(\"div\", {\n        className: \"bottom-middle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, this.renderSquare(11), this.renderSquare(12), this.renderSquare(13), this.renderSquare(14)), React.createElement(\"div\", {\n        className: \"bottom-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, this.renderSquare(15), this.renderSquare(16), this.renderSquare(17))), this.renderSeaBorder(\"right\"), this.renderSeaBorder(\"bottom-left\"), this.renderSeaBorder(\"bottom\"), this.renderSeaBorder(\"bottom-right\"));\n    }\n  }, {\n    key: \"renderSeaBorder\",\n    value: function renderSeaBorder(orientation) {\n      return React.createElement(SeaBorder, {\n        orientation: orientation,\n        tradingPosts: \"3:1 Sheep\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Board;\n}(React.Component);\n\nfunction generateTiles() {\n  var tileArr = [];\n\n  for (var i = 0; i < 18; i++) {\n    var type = getType();\n    var number = Math.ceil(Math.random() * 12);\n    tileArr.push({\n      type: type,\n      number: number\n    });\n  }\n\n  return tileArr;\n}\n\nvar Game =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(Game, _React$Component2);\n\n  function Game(props) {\n    var _this;\n\n    _classCallCheck(this, Game);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Game).call(this, props));\n    _this.state = {\n      tiles: generateTiles()\n    };\n    return _this;\n  }\n\n  _createClass(Game, [{\n    key: \"handleClick\",\n    value: function handleClick(i) {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"game\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"game-board\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(Board, {\n        onClick: function onClick(i) {\n          return _this2.handleClick(i);\n        },\n        tiles: this.state.tiles,\n        currentRoll: this.state.currentRoll,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"game-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this2.handleRoll();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \"Roll\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, \"Current roll: \", this.state.currentRoll)));\n    }\n  }, {\n    key: \"handleRoll\",\n    value: function handleRoll() {\n      var roll = Math.ceil(Math.random() * 6);\n      this.setState({\n        currentRoll: roll\n      });\n    }\n  }]);\n\n  return Game;\n}(React.Component); // ========================================\n\n\nReactDOM.render(React.createElement(Game, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 160\n  },\n  __self: this\n}), document.getElementById('root'));\n\nfunction getType() {\n  var types = [\"grass\", \"stone\", \"brick\", \"hay\", \"sheep\"];\n  return types[Math.floor(Math.random() * 5)];\n}","map":{"version":3,"sources":["/Users/glynam/Development/catan/src/index.js"],"names":["React","ReactDOM","Tile","props","produceResource","console","log","type","currentRoll","diceValue","isSand","SeaBorder","orientation","Board","tileNumber","tiles","number","renderSeaBorder","renderSquare","renderSand","Component","generateTiles","tileArr","i","getType","Math","ceil","random","push","Game","state","handleClick","handleRoll","roll","setState","render","document","getElementById","types","floor"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nfunction Tile(props) {\n    const produceResource = () => {\n        console.log(\"I produced resources of\" + props.type);\n    };\n    if (props.currentRoll === props.diceValue) {\n        produceResource();\n    }\n    if (props.isSand) {\n        return (\n            <button className=\"square sand\">\n            </button>\n        );\n    } else {\n        return (\n            <button className={`square ${props.type}`}>\n                {props.diceValue}\n            </button>\n        );\n    }\n\n}\n\nfunction SeaBorder(props) {\n    return (\n        <div className={`seaBorder ${props.orientation}`}>\n            3:1 Sheep Port\n        </div>\n    )\n}\n\nclass Board extends React.Component {\n    renderSquare(tileNumber) {\n        return (\n            <Tile\n                diceValue={this.props.tiles[tileNumber].number}\n                type={this.props.tiles[tileNumber].type}\n                currentRoll={this.props.currentRoll}\n            />\n        );\n    }\n    renderSand() {\n        return (\n            <Tile/>\n        );\n    }\n    render() {\n        return (\n            <div>\n                {this.renderSeaBorder(\"top-left\")}\n                {this.renderSeaBorder(\"top\")}\n                {this.renderSeaBorder(\"top-right\")}\n                {this.renderSeaBorder(\"left\")}\n\n\n                <div className=\"hexagons\">\n                    <div className=\"top-row\">\n                        {this.renderSquare(0)}\n                        {this.renderSquare(1)}\n                        {this.renderSquare(2)}\n                    </div>\n                    <div className=\"top-middle\">\n                        {this.renderSquare(3)}\n                        {this.renderSquare(4)}\n                        {this.renderSquare(5)}\n                        {this.renderSquare(6)}\n                    </div>\n                    <div className=\"middle\">\n                        {this.renderSquare(7)}\n                        {this.renderSquare(8)}\n                        {this.renderSand()}\n                        {this.renderSquare(9)}\n                        {this.renderSquare(10)}\n                    </div>\n\n                    <div className=\"bottom-middle\">\n                        {this.renderSquare(11)}\n                        {this.renderSquare(12)}\n                        {this.renderSquare(13)}\n                        {this.renderSquare(14)}\n                    </div>\n\n                    <div className=\"bottom-row\">\n                        {this.renderSquare(15)}\n                        {this.renderSquare(16)}\n                        {this.renderSquare(17)}\n                    </div>\n                </div>\n                {this.renderSeaBorder(\"right\")}\n                {this.renderSeaBorder(\"bottom-left\")}\n                {this.renderSeaBorder(\"bottom\")}\n                {this.renderSeaBorder(\"bottom-right\")}\n            </div>\n        );\n    }\n\n    renderSeaBorder(orientation) {\n        return (\n            <SeaBorder\n                orientation={orientation}\n                tradingPosts={\"3:1 Sheep\"}\n            />\n        );\n    }\n\n}\n\nfunction generateTiles() {\n    let tileArr = [];\n    for (let  i=0; i < 18; i++) {\n        let type = getType();\n        let number = Math.ceil(Math.random() * 12);\n        tileArr.push({\n            type: type,\n            number: number\n        });\n    }\n    return tileArr;\n\n}\n\nclass Game extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            tiles: generateTiles()\n        };\n    }\n    handleClick(i) {\n    }\n    render() {\n        return (\n            <div className=\"game\">\n                <div className=\"game-board\">\n                    <Board\n                        onClick={(i) => this.handleClick(i)}\n                        tiles={this.state.tiles}\n                        currentRoll={this.state.currentRoll}\n                    />\n                </div>\n                <div className=\"game-info\">\n                    <button onClick={() => this.handleRoll()}>Roll</button>\n                    <div>Current roll: {this.state.currentRoll}</div>\n                </div>\n            </div>\n        );\n    }\n\n    handleRoll() {\n        const roll = Math.ceil(Math.random() * 6);\n        this.setState({currentRoll: roll});\n    }\n}\n\n// ========================================\n\nReactDOM.render(\n    <Game />,\n    document.getElementById('root')\n);\n\nfunction getType() {\n    const types = [\"grass\", \"stone\", \"brick\", \"hay\", \"sheep\"];\n    return types[Math.floor(Math.random() * 5)];\n}\n"]},"metadata":{},"sourceType":"module"}