{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Gary\\\\Development\\\\settlers-of-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Gary\\\\Development\\\\settlers-of-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Gary\\\\Development\\\\settlers-of-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Gary\\\\Development\\\\settlers-of-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Gary\\\\Development\\\\settlers-of-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Gary\\\\Development\\\\settlers-of-react\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Player from './Players/player';\nimport Board from './Board/Board';\n\nfunction generateTiles() {\n  var tileArr = [];\n\n  for (var i = 0; i < 18; i++) {\n    var type = getType();\n    var number = Math.ceil(Math.random() * 12);\n    tileArr.push({\n      type: type,\n      number: number\n    });\n  }\n\n  return tileArr;\n}\n\nvar Game =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Game, _React$Component);\n\n  function Game(props) {\n    var _this;\n\n    _classCallCheck(this, Game);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Game).call(this, props));\n    _this.state = {\n      tiles: generateTiles(),\n      player: {\n        cards: []\n      }\n    };\n    return _this;\n  }\n\n  _createClass(Game, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"game\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"game-board\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(Board, {\n        tiles: this.state.tiles,\n        currentRoll: this.state.currentRoll,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"game-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this2.handleRoll();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Roll\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Current roll: \", this.state.currentRoll), \"Player one info\", React.createElement(Player, {\n        player: this.state.player,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"handleRoll\",\n    value: function handleRoll() {\n      var roll = Math.ceil(Math.random() * 6);\n      this.setState({\n        currentRoll: roll\n      });\n      var newCards = [];\n      this.state.tiles.forEach(function (tile) {\n        if (tile.number === roll) {\n          newCards.push(tile.type);\n        }\n      });\n      this.setState({\n        player: {\n          cards: this.state.player.cards.concat(newCards)\n        }\n      });\n    }\n  }]);\n\n  return Game;\n}(React.Component); // ========================================\n\n\nReactDOM.render(React.createElement(Game, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 70\n  },\n  __self: this\n}), document.getElementById('root'));\n\nfunction getType() {\n  var types = [\"grass\", \"stone\", \"brick\", \"hay\", \"sheep\"];\n  return types[Math.floor(Math.random() * 5)];\n}","map":{"version":3,"sources":["C:/Users/Gary/Development/settlers-of-react/src/index.js"],"names":["React","ReactDOM","Player","Board","generateTiles","tileArr","i","type","getType","number","Math","ceil","random","push","Game","props","state","tiles","player","cards","currentRoll","handleRoll","roll","setState","newCards","forEach","tile","concat","Component","render","document","getElementById","types","floor"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,KAAP,MAAkB,eAAlB;;AACA,SAASC,aAAT,GAAyB;AACrB,MAAIC,OAAO,GAAG,EAAd;;AACA,OAAK,IAAKC,CAAC,GAAC,CAAZ,EAAeA,CAAC,GAAG,EAAnB,EAAuBA,CAAC,EAAxB,EAA4B;AACxB,QAAIC,IAAI,GAAGC,OAAO,EAAlB;AACA,QAAIC,MAAM,GAAGC,IAAI,CAACC,IAAL,CAAUD,IAAI,CAACE,MAAL,KAAgB,EAA1B,CAAb;AACAP,IAAAA,OAAO,CAACQ,IAAR,CAAa;AACTN,MAAAA,IAAI,EAAEA,IADG;AAETE,MAAAA,MAAM,EAAEA;AAFC,KAAb;AAIH;;AACD,SAAOJ,OAAP;AACH;;IAEKS,I;;;;;AACF,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAEb,aAAa,EADX;AAETc,MAAAA,MAAM,EAAE;AACJC,QAAAA,KAAK,EAAE;AADH;AAFC,KAAb;AAFe;AAQlB;;;;6BACQ;AAAA;;AACL,aACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AACI,QAAA,KAAK,EAAE,KAAKH,KAAL,CAAWC,KADtB;AAEI,QAAA,WAAW,EAAE,KAAKD,KAAL,CAAWI,WAF5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,EAOI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACC,UAAL,EAAN;AAAA,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAoB,KAAKL,KAAL,CAAWI,WAA/B,CAFJ,qBAII,oBAAC,MAAD;AACI,QAAA,MAAM,EAAE,KAAKJ,KAAL,CAAWE,MADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,CAPJ,CADJ;AAkBH;;;iCAEY;AACT,UAAMI,IAAI,GAAGZ,IAAI,CAACC,IAAL,CAAUD,IAAI,CAACE,MAAL,KAAgB,CAA1B,CAAb;AACA,WAAKW,QAAL,CAAc;AAACH,QAAAA,WAAW,EAAEE;AAAd,OAAd;AACA,UAAME,QAAQ,GAAG,EAAjB;AACA,WAAKR,KAAL,CAAWC,KAAX,CAAiBQ,OAAjB,CAAyB,UAAAC,IAAI,EAAI;AAC7B,YAAIA,IAAI,CAACjB,MAAL,KAAgBa,IAApB,EAA0B;AACtBE,UAAAA,QAAQ,CAACX,IAAT,CAAca,IAAI,CAACnB,IAAnB;AACH;AACJ,OAJD;AAKA,WAAKgB,QAAL,CAAc;AACVL,QAAAA,MAAM,EAAE;AACJC,UAAAA,KAAK,EAAE,KAAKH,KAAL,CAAWE,MAAX,CAAkBC,KAAlB,CAAwBQ,MAAxB,CAA+BH,QAA/B;AADH;AADE,OAAd;AAKH;;;;EA7CcxB,KAAK,CAAC4B,S,GAgDzB;;;AAEA3B,QAAQ,CAAC4B,MAAT,CACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,EAEIC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFJ;;AAKA,SAASvB,OAAT,GAAmB;AACf,MAAMwB,KAAK,GAAG,CAAC,OAAD,EAAU,OAAV,EAAmB,OAAnB,EAA4B,KAA5B,EAAmC,OAAnC,CAAd;AACA,SAAOA,KAAK,CAACtB,IAAI,CAACuB,KAAL,CAAWvB,IAAI,CAACE,MAAL,KAAgB,CAA3B,CAAD,CAAZ;AACH","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Player from './Players/player'\r\nimport Board from './Board/Board'\r\nfunction generateTiles() {\r\n    let tileArr = [];\r\n    for (let  i=0; i < 18; i++) {\r\n        let type = getType();\r\n        let number = Math.ceil(Math.random() * 12);\r\n        tileArr.push({\r\n            type: type,\r\n            number: number\r\n        });\r\n    }\r\n    return tileArr;\r\n}\r\n\r\nclass Game extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            tiles: generateTiles(),\r\n            player: {\r\n                cards: []\r\n            }\r\n        };\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"game\">\r\n                <div className=\"game-board\">\r\n                    <Board\r\n                        tiles={this.state.tiles}\r\n                        currentRoll={this.state.currentRoll}\r\n                    />\r\n                </div>\r\n                <div className=\"game-info\">\r\n                    <button onClick={() => this.handleRoll()}>Roll</button>\r\n                    <div>Current roll: {this.state.currentRoll}</div>\r\n                    Player one info\r\n                    <Player\r\n                        player={this.state.player}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    handleRoll() {\r\n        const roll = Math.ceil(Math.random() * 6);\r\n        this.setState({currentRoll: roll});\r\n        const newCards = [];\r\n        this.state.tiles.forEach(tile => {\r\n            if (tile.number === roll) {\r\n                newCards.push(tile.type);\r\n            }\r\n        });\r\n        this.setState({\r\n            player: {\r\n                cards: this.state.player.cards.concat(newCards)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n    <Game />,\r\n    document.getElementById('root')\r\n);\r\n\r\nfunction getType() {\r\n    const types = [\"grass\", \"stone\", \"brick\", \"hay\", \"sheep\"];\r\n    return types[Math.floor(Math.random() * 5)];\r\n}\r\n"]},"metadata":{},"sourceType":"module"}